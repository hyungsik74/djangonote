import{_ as t,o,c as e,Q as i}from"./chunks/framework.4976f53a.js";const a="/djangonote/assets/ch05-05-01_01.b606d9fa.png",s="/djangonote/assets/ch05-05-01_02.da3bca58.png",r="/djangonote/assets/ch05-05-01_04.8ef31a5c.png",c="/djangonote/assets/ch05-05-01_06.e9cb0682.png",f=JSON.parse('{"title":"5-5. GitHub 연동","description":"","frontmatter":{},"headers":[],"relativePath":"ch05/ch05-05.md","filePath":"ch05/ch05-05.md"}'),l={name:"ch05/ch05-05.md"},p=i('<link rel="stylesheet" href="../css/style.css"><h1 id="_5-5-github-연동" tabindex="-1">5-5. GitHub 연동 <a class="header-anchor" href="#_5-5-github-연동" aria-label="Permalink to &quot;5-5. GitHub 연동&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">About</p><p>최근 소스코드 버전관리와 웹 공간에 보관 및 배포를 위해 Github(깃허브)를 사용하고 있습니다. 형상관리 목적으로 주로 이용되며, 개인의 경우에도 클라우드 저장소처럼 사용할 수도 있고, 손쉽게 체계적으로 코드를 관리할 수 있습니다.</p></div><ul><li>Github(깃허브)는 Git 이라는 관리 프로그램 기반으로 작동합니다.</li><li>Git은 Console(콘솔)에서 명령어를 입력해서 사용합니다.(초보개발자는 사용이 약간 어렵습니다.)</li><li>Pycharm(파이참)은 자체적으로 Github와 연동하는 기능을 GUI로 제공하고 있어 쉽게 소스를 동기화 할수 있습니다.</li><li>참고로 사전에 Pycharm 설치, Github 가입, Git 설치(개발PC) 에 설치 및 가입이 되어있어야 합니다.</li></ul><h2 id="_5-5-1-pycharm-설정" tabindex="-1">5-5-1 Pycharm 설정 <a class="header-anchor" href="#_5-5-1-pycharm-설정" aria-label="Permalink to &quot;5-5-1 Pycharm 설정&quot;">​</a></h2><p>파이참에서 메뉴 &gt; VCS &gt; Share Project on GitHub 을 클릭합니다.</p><p><img src="'+a+'" alt="ch05-05-01_01.png"> 그림4-5. Pycharm 메뉴</p><p>Git이 개발 PC에 설치 되어 있지 않으면 &quot;Git is not Installed&quot; 라는 메시지가 표시됩니다. 설치하려면, &quot;Download and Install&quot; 파란색 글씨를 클릭하면 바로 설치가 됩니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Git 설치관련해서는 2-9장 <a href="/djangonote/ch02/ch02-09.html">Git</a> 설치가이드를 참고 하세요</p></div><ol><li>Share Project On GitHub 창이 표시됩니다. <ul><li>Repository name: 신규 레포지토리 이름</li><li>Remote: local 단축 명</li><li>Description: 설명</li><li>Shared by: 본인의 github 주소</li></ul></li></ol><p><img src="'+s+'" alt="ch05-05-01_02.png"> 그림4-5. Share Project On GitHub 설정</p><ol start="2"><li>반영할 소스 파일 선택 소스에 반영할 파일을 선택하고, Commit Message를 입력후 Add 버튼을 선택합니다.</li></ol><p><img src="'+r+'" alt="ch05-05-01_04.png"> 그림4-5. 소스 선택화면</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Git 명령어 Command 예제 입니다. GUI 화면이 아닌 다음과 명령어로 Commit 할 수 있습니다. 별도의 Git 설정 페이지에서 설명하도록 하겠습니다.</p><p>예) git init<br> git add -A<br> git -m &quot;Initial commit&quot;<br> git push origin master</p></div><ol start="3"><li>완료 후 모습</li></ol><div class="info custom-block"><p class="custom-block-title">git commit log</p><p>21:03:34.393: [bookmark-project] git init</p><p>21:06:27.720: [bookmark-project] git add --ignore-errors -A -- config/asgi.py bookmark/tests.py</p><p>21:06:33.707: [bookmark-project] git add --ignore-errors -A -f -- config/asgi.py bookmark/tests.py</p><p>21:06:34.222: [bookmark-project] git commit -F C:\\Users\\choi\\AppData\\Local\\Temp\\git-commit-msg-.txt -- [master (root-commit) c3fa32e] 여기에 커밋 메시지 작성. 30 files changed, 454 insertions(+) ... create mode 100644 bookmark/urls.py create mode 100644 bookmark/views.py create mode 100644 config/<strong>init</strong>.py ... create mode 100644 templates/base.html</p><p>21:06:49.253: [bookmark-project] git push --progress --porcelain origin refs/heads/master:refs/heads/master --set-upstream Enumerating objects: 39, done.<br> ...<br> Writing objects: 100% (39/39), 13.95 KiB | 476.00 KiB/s, done.<br> Total 39 (delta 1), reused 0 (delta 0), pack-reused 0<br> remote: Resolving deltas: 100% (1/1), done.<br> To <a href="https://github.com/hyungsik74/bookmark-project.git" target="_blank" rel="noreferrer">https://github.com/hyungsik74/bookmark-project.git</a><br> refs/heads/master:refs/heads/master [new branch]<br> branch &#39;master&#39; set up to track &#39;origin/master&#39;.<br> Done</p></div><p>로그5-5. Commit 로그</p><ol start="4"><li>Github 사이트 접속 Github 사이트에 접속해서 해당 Repository 에 파일이 반영 되었는지 확인 한다.</li></ol><p><img src="'+c+'" alt="ch05-05-01_06.png"> 그림5-5. GitHub 반영 모습</p>',19),n=[p];function m(h,d,b,g,u,_){return o(),e("div",null,n)}const G=t(l,[["render",m]]);export{f as __pageData,G as default};
